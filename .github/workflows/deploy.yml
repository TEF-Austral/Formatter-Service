name: Build and Deploy to Azure VM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase image name
        id: image
        run: |
          echo "name=$(echo 'ghcr.io/${{ github.repository_owner }}/echo' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.image.outputs.name }}:latest
            ${{ steps.image.outputs.name }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Set lowercase image name
        id: image
        run: |
          echo "name=$(echo 'ghcr.io/${{ github.repository_owner }}/echo' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd ~/echo-app

            echo "🔐 Logging into GitHub Container Registry..."
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "📥 Pulling latest image..."
            docker pull ghcr.io/tef-austral/echo:latest

            echo "🔄 Restarting containers...."
            docker compose down
            docker compose up -d

            echo "🧹 Cleaning old images..."
            docker image prune -f

            echo "📋 Container status:"
            docker compose ps

            echo "📝 Recent logs:"
            docker compose logs --tail=30 api

            echo "✅ Deployment completed successfully!"